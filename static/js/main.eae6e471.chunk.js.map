{"version":3,"sources":["pomodoro/Pomodoro.js","utils/useInterval/index.js","utils/class-names/index.js","App.js","index.js"],"names":["nextTick","prevState","timeRemaining","Math","max","Pomodoro","useState","isTimerRunning","setIsTimerRunning","session","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","focusTime","breakTime","handleDuration","target","id","zero","timeDuration","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","Audio","play","currentSession","label","nextSession","classNameToBoolean","stopDisabledStatus","setStopDisabledStatus","durationStatus","setDurationStatus","timeDisplay","time","handleAriaValueNow","display","hidden","setHidden","className","data-testid","type","onClick","disabled","role","aria-label","title","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","style","handleSessiontTitle","minutes","floor","seconds","minutesConverterFunc","height","aria-valuemin","aria-valuemax","aria-valuenow","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eae6e471.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const focusTime = focusDuration;\n  const breakTime = breakDuration;\n  const time = (session) => {\n    if (session?.label !== \"On Break\") return focusTime;\n    return breakTime; \n  }\n\n  const handleDuration = ({target}) => {\n    if (target.id === \"decrease-focus\" && focusDuration > 5) setFocusDuration(focusDuration - 5)\n    if (target.id === \"increase-focus\" && focusDuration < 60) setFocusDuration(focusDuration + 5)\n    if (target.id === \"decrease-break\" && breakDuration > 1) setBreakDuration(breakDuration - 1)\n    if (target.id === \"increase-break\" && breakDuration < 15) setBreakDuration(breakDuration + 1)\n  }\n\n  const zero = (timeDuration) => {\n    if (timeDuration < 10) return 0;\n    return null;\n  }\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  const [stopDisabledStatus, setStopDisabledStatus] = useState(true);\n  const [durationStatus, setDurationStatus] = useState(false)\n\n  function playPause() {\n    setStopDisabledStatus(false);\n    setDurationStatus(true);\n    setHidden(null)\n\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  const timeDisplay = time(session);\n\n  const minutesConverterFunc = (timeRemaining) => {\n    let minutes = timeRemaining / 60;\n    minutes = Math.floor(minutes);\n    if (minutes < 10) minutes = `0${minutes}`\n    let seconds = timeRemaining % 60;\n    if (seconds < 10) seconds = `0${seconds}`\n    return `${minutes}:${seconds}`\n  }\n\n  const handleAriaValueNow = (session) => {\n    return 100 - (session?.timeRemaining / (timeDisplay * 60 ) * 100);\n  };\n  \n  const [hidden, setHidden] = useState({display: \"none\" })\n\n  const stopFunc = () => {\n    setIsTimerRunning(false);\n    setSession(null);\n    setHidden({display: \"none\" });\n    setDurationStatus(false);\n    setStopDisabledStatus(true);\n  }\n\n  const handleSessiontTitle = (session) => {\n    if (!session) return null\n    return <h2 data-testid=\"session-title\">{session?.label} for {zero(timeDisplay)}{timeDisplay}:00 minutes</h2>\n  };\n  const handleSessiontSubTitle = () => {\n    if (!session) return null\n    return <p className=\"lead\" data-testid=\"session-sub-title\">{minutesConverterFunc(session?.timeRemaining)} remaining</p>\n  };\n  \n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {zero(focusDuration)}{focusDuration}:00\n            </span>\n            <div className=\"input-group-append\" >\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                id=\"decrease-focus\"\n                onClick={handleDuration}\n                disabled={durationStatus}\n              >\n                <span className=\"oi oi-minus\"  />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                id=\"increase-focus\"\n                onClick={handleDuration}\n                disabled={durationStatus}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {zero(breakDuration)}{breakDuration}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  id=\"decrease-break\"\n                  onClick={handleDuration}\n                  disabled={durationStatus}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  id=\"increase-break\"\n                  onClick={handleDuration}\n                  disabled={durationStatus}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n              \n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            \n\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              disabled={stopDisabledStatus}\n              onClick={stopFunc}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\" style={hidden}>\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            \n              {handleSessiontTitle(session)}\n            \n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            \n            {handleSessiontSubTitle(session)}\n          </div>\n        </div>\n        <div className=\"row mb-2\"  style={hidden}>\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={handleAriaValueNow(session)} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${handleAriaValueNow(session)}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}